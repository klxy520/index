<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jc.cz_index.dao.IAddressDao">
	
	<resultMap id="resultMap" type="com.jc.cz_index.model.Address">
            <result property="id" column="id" />
            <result property="personId" column="person_id" />
            <result property="mpiId" column="mpi_id" />
            <result property="addressTypeCode" column="address_type_code" />
            <result property="address" column="address" />
            <result property="postalCode" column="postal_code" />
            <result property="delFalg" column="del_falg" />
            <result property="deleteor" column="deleteor" />
            <result property="deleteDate" column="delete_date" />
            <result property="creator" column="creator" />
            <result property="createDate" column="create_date" />
            <result property="createUnit" column="create_unit" />
            <result property="updator" column="updator" />
            <result property="lastModifyUnit" column="last_modify_unit" />
            <result property="updateDate" column="update_date" />

	</resultMap>
	
	<resultMap id="resultDetailMap" type="com.jc.cz_index.model.Address">
            <result property="id" column="id" />
            <result property="personId" column="person_id" />
            <result property="mpiId" column="mpi_id" />
            <result property="addressTypeCode" column="address_type_code" />
            <result property="address" column="address" />
            <result property="postalCode" column="postal_code" />
            <result property="delFalg" column="del_falg" />
            <result property="deleteor" column="deleteor" />
            <result property="deleteDate" column="delete_date" />
            <result property="creator" column="creator" />
            <result property="createDate" column="create_date" />
            <result property="createUnit" column="create_unit" />
            <result property="updator" column="updator" />
            <result property="lastModifyUnit" column="last_modify_unit" />
            <result property="updateDate" column="update_date" />


	  <association property="creatorUser" column="creator" select="com.jc.cz_index.dao.ISystemUserDao.getBaseObject">
	  </association>
	  <association property="updatorUser" column="updator" select="com.jc.cz_index.dao.ISystemUserDao.getBaseObject">
	  </association>
	 
	</resultMap>
	
	<sql id="baseCol">
        id,person_id,mpi_id,address_type_code,address,postal_code,del_falg,deleteor,delete_date,creator,create_date,create_unit,updator,last_modify_unit,update_date

	</sql>

	<sql id="pageSql">
		<if test="__start !=null and __size!=null"><![CDATA[ limit #{__start},#{__size} ]]></if>
	</sql>

	<sql id="whereSql">
		<trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="id != null"><![CDATA[ and id = #{id} ]]></if>
            <if test="id_r_min != null"><![CDATA[ and id >= #{id_r_min} and id <= #{id_r_max} ]]></if>
            <if test="id_enum != null">
                <![CDATA[ and id in ]]>
                <foreach collection="id_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="personId != null"><![CDATA[ and  person_id = #{personId:NUMERIC}]]></if>
            <if test="personId_r_min != null"><![CDATA[ and person_id >= #{personId_r_min} and person_id <= #{personId_r_max} ]]></if>
            <if test="personId_enum != null">
                <![CDATA[ and person_id in ]]>
                <foreach collection="personId_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="mpiId != null"><![CDATA[ and  mpi_id = #{mpiId:VARCHAR}]]></if>
            <if test="mpiId_r_min != null"><![CDATA[ and mpi_id >= #{mpiId_r_min} and mpi_id <= #{mpiId_r_max} ]]></if>
            <if test="mpiId_enum != null">
                <![CDATA[ and mpi_id in ]]>
                <foreach collection="mpiId_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="addressTypeCode != null"><![CDATA[ and  address_type_code = #{addressTypeCode:VARCHAR}]]></if>
            <if test="addressTypeCode_r_min != null"><![CDATA[ and address_type_code >= #{addressTypeCode_r_min} and address_type_code <= #{addressTypeCode_r_max} ]]></if>
            <if test="addressTypeCode_enum != null">
                <![CDATA[ and address_type_code in ]]>
                <foreach collection="addressTypeCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="address != null"><![CDATA[ and  address = #{address:VARCHAR}]]></if>
            <if test="address_r_min != null"><![CDATA[ and address >= #{address_r_min} and address <= #{address_r_max} ]]></if>
            <if test="address_enum != null">
                <![CDATA[ and address in ]]>
                <foreach collection="address_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="postalCode != null"><![CDATA[ and  postal_code = #{postalCode:VARCHAR}]]></if>
            <if test="postalCode_r_min != null"><![CDATA[ and postal_code >= #{postalCode_r_min} and postal_code <= #{postalCode_r_max} ]]></if>
            <if test="postalCode_enum != null">
                <![CDATA[ and postal_code in ]]>
                <foreach collection="postalCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="delFalg != null"><![CDATA[ and  del_falg = #{delFalg:NUMERIC}]]></if>
            <if test="delFalg_r_min != null"><![CDATA[ and del_falg >= #{delFalg_r_min} and del_falg <= #{delFalg_r_max} ]]></if>
            <if test="delFalg_enum != null">
                <![CDATA[ and del_falg in ]]>
                <foreach collection="delFalg_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="deleteor != null"><![CDATA[ and  deleteor = #{deleteor:NUMERIC}]]></if>
            <if test="deleteor_r_min != null"><![CDATA[ and deleteor >= #{deleteor_r_min} and deleteor <= #{deleteor_r_max} ]]></if>
            <if test="deleteor_enum != null">
                <![CDATA[ and deleteor in ]]>
                <foreach collection="deleteor_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="deleteDate != null"><![CDATA[ and  delete_date = #{deleteDate:DATETIME}]]></if>
            <if test="deleteDate_r_min != null"><![CDATA[ and delete_date >= #{deleteDate_r_min} and delete_date <= #{deleteDate_r_max} ]]></if>
            <if test="deleteDate_enum != null">
                <![CDATA[ and delete_date in ]]>
                <foreach collection="deleteDate_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="creator != null"><![CDATA[ and  creator = #{creator:NUMERIC}]]></if>
            <if test="creator_r_min != null"><![CDATA[ and creator >= #{creator_r_min} and creator <= #{creator_r_max} ]]></if>
            <if test="creator_enum != null">
                <![CDATA[ and creator in ]]>
                <foreach collection="creator_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="createDate != null"><![CDATA[ and  create_date = #{createDate:DATETIME}]]></if>
            <if test="createDate_r_min != null"><![CDATA[ and create_date >= #{createDate_r_min} and create_date <= #{createDate_r_max} ]]></if>
            <if test="createDate_enum != null">
                <![CDATA[ and create_date in ]]>
                <foreach collection="createDate_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="createUnit != null"><![CDATA[ and  create_unit = #{createUnit:VARCHAR}]]></if>
            <if test="createUnit_r_min != null"><![CDATA[ and create_unit >= #{createUnit_r_min} and create_unit <= #{createUnit_r_max} ]]></if>
            <if test="createUnit_enum != null">
                <![CDATA[ and create_unit in ]]>
                <foreach collection="createUnit_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="updator != null"><![CDATA[ and  updator = #{updator:NUMERIC}]]></if>
            <if test="updator_r_min != null"><![CDATA[ and updator >= #{updator_r_min} and updator <= #{updator_r_max} ]]></if>
            <if test="updator_enum != null">
                <![CDATA[ and updator in ]]>
                <foreach collection="updator_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="lastModifyUnit != null"><![CDATA[ and  last_modify_unit = #{lastModifyUnit:VARCHAR}]]></if>
            <if test="lastModifyUnit_r_min != null"><![CDATA[ and last_modify_unit >= #{lastModifyUnit_r_min} and last_modify_unit <= #{lastModifyUnit_r_max} ]]></if>
            <if test="lastModifyUnit_enum != null">
                <![CDATA[ and last_modify_unit in ]]>
                <foreach collection="lastModifyUnit_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="maxUpateDate_r_leq !=' 23:59:59' and maxUpateDate_r_leq!= null"><![CDATA[ and update_date <= #{maxUpateDate_r_leq} ]]></if>
			<if
				test="minUpateDate_r_geq !=' 00:00:00' and  minUpateDate_r_geq!= null "><![CDATA[ and update_date >= #{minUpateDate_r_geq} ]]></if>
            <if test="updateDate != null"><![CDATA[ and  update_date = #{updateDate:DATETIME}]]></if>
            <if test="updateDate_r_min != null"><![CDATA[ and update_date >= #{updateDate_r_min} and update_date <= #{updateDate_r_max} ]]></if>
            <if test="updateDate_enum != null">
                <![CDATA[ and update_date in ]]>
                <foreach collection="updateDate_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>

		</trim>
	</sql>

	<sql id="orderSql">
		<trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'id_desc'"><![CDATA[ id desc, ]]></if>
            <if test="_orderBy == 'id_asc'"><![CDATA[ id, ]]></if>
            <if test="_orderBy == 'personId_desc'" ><![CDATA[ person_id desc, ]]></if>
            <if test="_orderBy == 'personId_asc'" ><![CDATA[ person_id, ]]></if>
            <if test="_orderBy == 'mpiId_desc'" ><![CDATA[ mpi_id desc, ]]></if>
            <if test="_orderBy == 'mpiId_asc'" ><![CDATA[ mpi_id, ]]></if>
            <if test="_orderBy == 'addressTypeCode_desc'" ><![CDATA[ address_type_code desc, ]]></if>
            <if test="_orderBy == 'addressTypeCode_asc'" ><![CDATA[ address_type_code, ]]></if>
            <if test="_orderBy == 'address_desc'" ><![CDATA[ address desc, ]]></if>
            <if test="_orderBy == 'address_asc'" ><![CDATA[ address, ]]></if>
            <if test="_orderBy == 'postalCode_desc'" ><![CDATA[ postal_code desc, ]]></if>
            <if test="_orderBy == 'postalCode_asc'" ><![CDATA[ postal_code, ]]></if>
            <if test="_orderBy == 'delFalg_desc'" ><![CDATA[ del_falg desc, ]]></if>
            <if test="_orderBy == 'delFalg_asc'" ><![CDATA[ del_falg, ]]></if>
            <if test="_orderBy == 'deleteor_desc'" ><![CDATA[ deleteor desc, ]]></if>
            <if test="_orderBy == 'deleteor_asc'" ><![CDATA[ deleteor, ]]></if>
            <if test="_orderBy == 'deleteDate_desc'" ><![CDATA[ delete_date desc, ]]></if>
            <if test="_orderBy == 'deleteDate_asc'" ><![CDATA[ delete_date, ]]></if>
            <if test="_orderBy == 'creator_desc'" ><![CDATA[ creator desc, ]]></if>
            <if test="_orderBy == 'creator_asc'" ><![CDATA[ creator, ]]></if>
            <if test="_orderBy == 'createDate_desc'" ><![CDATA[ create_date desc, ]]></if>
            <if test="_orderBy == 'createDate_asc'" ><![CDATA[ create_date, ]]></if>
            <if test="_orderBy == 'createUnit_desc'" ><![CDATA[ create_unit desc, ]]></if>
            <if test="_orderBy == 'createUnit_asc'" ><![CDATA[ create_unit, ]]></if>
            <if test="_orderBy == 'updator_desc'" ><![CDATA[ updator desc, ]]></if>
            <if test="_orderBy == 'updator_asc'" ><![CDATA[ updator, ]]></if>
            <if test="_orderBy == 'lastModifyUnit_desc'" ><![CDATA[ last_modify_unit desc, ]]></if>
            <if test="_orderBy == 'lastModifyUnit_asc'" ><![CDATA[ last_modify_unit, ]]></if>
            <if test="_orderBy == 'updateDate_desc'" ><![CDATA[ update_date desc, ]]></if>
            <if test="_orderBy == 'updateDate_asc'" ><![CDATA[ update_date, ]]></if>
            <if test="_orderBy_enum != null">
                <foreach collection="_orderBy_enum" item="orderItem" open="" separator="," close="">
                    <if test="orderItem == 'id_desc'"><![CDATA[ id desc ]]></if>
                    <if test="orderItem == 'id_asc'"><![CDATA[ id ]]></if>
                    <if test="orderItem == 'personId_desc'" ><![CDATA[ person_id desc ]]></if>
                    <if test="orderItem == 'personId_asc'" ><![CDATA[ person_id ]]></if>
                    <if test="orderItem == 'mpiId_desc'" ><![CDATA[ mpi_id desc ]]></if>
                    <if test="orderItem == 'mpiId_asc'" ><![CDATA[ mpi_id ]]></if>
                    <if test="orderItem == 'addressTypeCode_desc'" ><![CDATA[ address_type_code desc ]]></if>
                    <if test="orderItem == 'addressTypeCode_asc'" ><![CDATA[ address_type_code ]]></if>
                    <if test="orderItem == 'address_desc'" ><![CDATA[ address desc ]]></if>
                    <if test="orderItem == 'address_asc'" ><![CDATA[ address ]]></if>
                    <if test="orderItem == 'postalCode_desc'" ><![CDATA[ postal_code desc ]]></if>
                    <if test="orderItem == 'postalCode_asc'" ><![CDATA[ postal_code ]]></if>
                    <if test="orderItem == 'delFalg_desc'" ><![CDATA[ del_falg desc ]]></if>
                    <if test="orderItem == 'delFalg_asc'" ><![CDATA[ del_falg ]]></if>
                    <if test="orderItem == 'deleteor_desc'" ><![CDATA[ deleteor desc ]]></if>
                    <if test="orderItem == 'deleteor_asc'" ><![CDATA[ deleteor ]]></if>
                    <if test="orderItem == 'deleteDate_desc'" ><![CDATA[ delete_date desc ]]></if>
                    <if test="orderItem == 'deleteDate_asc'" ><![CDATA[ delete_date ]]></if>
                    <if test="orderItem == 'creator_desc'" ><![CDATA[ creator desc ]]></if>
                    <if test="orderItem == 'creator_asc'" ><![CDATA[ creator ]]></if>
                    <if test="orderItem == 'createDate_desc'" ><![CDATA[ create_date desc ]]></if>
                    <if test="orderItem == 'createDate_asc'" ><![CDATA[ create_date ]]></if>
                    <if test="orderItem == 'createUnit_desc'" ><![CDATA[ create_unit desc ]]></if>
                    <if test="orderItem == 'createUnit_asc'" ><![CDATA[ create_unit ]]></if>
                    <if test="orderItem == 'updator_desc'" ><![CDATA[ updator desc ]]></if>
                    <if test="orderItem == 'updator_asc'" ><![CDATA[ updator ]]></if>
                    <if test="orderItem == 'lastModifyUnit_desc'" ><![CDATA[ last_modify_unit desc ]]></if>
                    <if test="orderItem == 'lastModifyUnit_asc'" ><![CDATA[ last_modify_unit ]]></if>
                    <if test="orderItem == 'updateDate_desc'" ><![CDATA[ update_date desc ]]></if>
                    <if test="orderItem == 'updateDate_asc'" ><![CDATA[ update_date ]]></if>
                </foreach>
            </if>

		</trim>
	</sql>

	<sql id="updateSetSql">
		<trim prefix="set" prefixOverrides=",">
            <if test="personId != null" ><![CDATA[ and  person_id = #{personId}]]></if>
            <if test="mpiId != null" ><![CDATA[ and  mpi_id = #{mpiId}]]></if>
            <if test="addressTypeCode != null" ><![CDATA[ and  address_type_code = #{addressTypeCode}]]></if>
            <if test="address != null" ><![CDATA[ and  address = #{address}]]></if>
            <if test="postalCode != null" ><![CDATA[ and  postal_code = #{postalCode}]]></if>
            <if test="delFalg != null" ><![CDATA[ and  del_falg = #{delFalg}]]></if>
            <if test="deleteor != null" ><![CDATA[ and  deleteor = #{deleteor}]]></if>
            <if test="deleteDate != null" ><![CDATA[ and  delete_date = #{deleteDate}]]></if>
            <if test="creator != null" ><![CDATA[ and  creator = #{creator}]]></if>
            <if test="createDate != null" ><![CDATA[ and  create_date = #{createDate}]]></if>
            <if test="createUnit != null" ><![CDATA[ and  create_unit = #{createUnit}]]></if>
            <if test="updator != null" ><![CDATA[ and  updator = #{updator}]]></if>
            <if test="lastModifyUnit != null" ><![CDATA[ and  last_modify_unit = #{lastModifyUnit}]]></if>
            <if test="updateDate != null" ><![CDATA[ and  update_date = #{updateDate}]]></if>

		</trim>
	</sql>	

	<insert id="insertObject" parameterType="com.jc.cz_index.model.Address">
		<selectKey resultType="Long" keyProperty="id" order="AFTER">
		 SELECT	LAST_INSERT_ID()
	 	</selectKey>
	 	insert into ADDRESS( id,person_id,mpi_id,address_type_code,address,postal_code,del_falg,deleteor,delete_date,creator,create_date,create_unit,updator,last_modify_unit,update_date) values (#{id},#{personId},#{mpiId},#{addressTypeCode},#{address},#{postalCode},#{delFalg},#{deleteor},#{deleteDate},#{creator},#{createDate},#{createUnit},#{updator},#{lastModifyUnit},#{updateDate} )
	</insert>

	<update id="updateObject" parameterType="com.jc.cz_index.model.Address">
		update ADDRESS set person_id=#{personId},mpi_id=#{mpiId},address_type_code=#{addressTypeCode},address=#{address},postal_code=#{postalCode},del_falg=#{delFalg},deleteor=#{deleteor},delete_date=#{deleteDate},creator=#{creator},create_date=#{createDate},create_unit=#{createUnit},updator=#{updator},last_modify_unit=#{lastModifyUnit},update_date=#{updateDate} where id=#{id}
	</update>
	
	<update id="updateObjectByFields" parameterType="com.jc.cz_index.dao.QueryParams">
		UPDATE ADDRESS 
		<include refid="updateSetSql" />
		where id=#{id};
  	</update> 
	
	<delete id="deleteObject" parameterType="long">
		DELETE FROM ADDRESS WHERE id = #{id}
  	</delete>

	<delete id="deleteObjectByWhere" parameterType="com.jc.cz_index.dao.QueryParams">
		DELETE FROM ADDRESS
		<include refid="whereSql" />
	</delete>

	<select id="getBaseObject" parameterType="long" resultMap="resultMap">
		select 
		<include refid="baseCol" />
		from ADDRESS where id=#{id};
	</select>

	<select id="getDetailObject" parameterType="long" resultMap="resultDetailMap">
		select * from ADDRESS where id=#{id};
	</select>
	
	<select id="queryCount" parameterType="com.jc.cz_index.dao.QueryParams" resultType="int">
		select count(*) from ADDRESS
		  <include refid="whereSql" />
	</select>
	
	<select id="queryBaseList" parameterType="com.jc.cz_index.dao.QueryParams" resultMap="resultMap">
		select 
		<include refid="baseCol" />
		from ADDRESS
			<include refid="whereSql" />
		  <include refid="orderSql" />
		<include refid="pageSql" />
	</select>

	<select id="queryDetailList" parameterType="com.jc.cz_index.dao.QueryParams" resultMap="resultDetailMap">
		select * from ADDRESS
			<include refid="whereSql" />
		  <include refid="orderSql" />
		<include refid="pageSql" />
	</select>
	
	<insert id="insertList" parameterType="java.util.List">
		insert into
        ADDRESS (person_id,mpi_id,address_type_code,address,postal_code,del_falg,deleteor,delete_date,creator,create_date,create_unit,updator,last_modify_unit,update_date)
		values 
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.personId},#{item.mpiId},#{item.addressTypeCode},#{item.address},#{item.postalCode},#{item.delFalg},#{item.deleteor},#{item.deleteDate},#{item.creator},#{item.createDate},#{item.createUnit},#{item.updator},#{item.lastModifyUnit},#{item.updateDate})
		</foreach>
	</insert>
	
	<delete id="deleteList" parameterType="java.util.List">
		delete from ADDRESS WHERE id in
		<foreach collection="list" item="item" index="index" open="(" separator="," close=")">
			#{item}
		</foreach>
  	</delete>
  	
  	<delete id="deleteListByPKs" parameterType="String">
		delete from ADDRESS WHERE FIND_IN_SET(id,#{PKs})
  	</delete>
	
	<select id="getObjectList" parameterType="java.util.List" resultMap="resultMap">
		select 
		<include refid="baseCol" />
		from ADDRESS WHERE id in
		<foreach collection="list" item="item" index="index" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	
	<select id="getObjectListByPKs" parameterType="String" resultMap="resultMap">
		select 
		<include refid="baseCol" />
		from ADDRESS WHERE FIND_IN_SET(id,#{PKs})
	</select>
	
	<select id="getObjectByMpiId" resultMap="resultMap">
		select * from ADDRESS where mpi_id = #{mpiId} and del_falg = 0
	</select>
	
	<select id="getUnSyncObjectList" parameterType="long" resultMap="resultDetailMap">
		SELECT
			per.*
		FROM
			address_sync_log addr
		LEFT JOIN address per ON  per.id = addr.address_id
		LEFT JOIN front_end_machine fem ON fem.id = addr.front_id
		WHERE
			addr.sync_status = '0' AND fem.id = #{id}
	</select>
	
	<insert id="saveOrUpdate" parameterType="com.jc.cz_index.model.Address">
		insert into ADDRESS( id,person_id,mpi_id,address_type_code,address,postal_code,del_falg,deleteor,delete_date,creator,create_date,create_unit,updator,last_modify_unit,update_date) values (#{id},#{personId},#{mpiId},#{addressTypeCode},#{address},#{postalCode},#{delFalg},#{deleteor},#{deleteDate},#{creator},#{createDate},#{createUnit},#{updator},#{lastModifyUnit},#{updateDate} )
        ON DUPLICATE KEY UPDATE
		mpi_id=values(mpi_id),
		address_type_code=values(address_type_code),
		address=values(address),
		postal_code=values(postal_code),
		del_falg=values(del_falg),
		deleteor=values(deleteor),
		delete_date=values(delete_date),
		creator=values(creator),
		create_date=values(create_date),
		create_unit=values(create_unit),
		updator=values(updator),
		last_modify_unit=values(last_modify_unit),
		update_date=values(update_date)
	</insert>
</mapper>

