<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jc.cz_index.dao.IHospitalDao">
    
    <resultMap id="resultMap" type="com.jc.cz_index.model.Hospital">
            <result property="id" column="id" />
            <result property="name" column="name" />
            <result property="address" column="address" />
            <result property="level" column="level" />
            <result property="hKey" column="h_key" />
            <result property="pycode" column="pyCode" />
            <result property="type" column="type" />
            <result property="typeName" column="type_name" />
            <result property="status" column="status" />
            <result property="phone" column="phone" />
            <result property="delFalg" column="del_falg" />
            <result property="creator" column="creator" />
            <result property="createDate" column="create_date" />
            <result property="updator" column="updator" />
            <result property="updateDate" column="update_date" />

    </resultMap>
    
    <resultMap id="resultDetailMap" type="com.jc.cz_index.model.Hospital">
            <result property="id" column="id" />
            <result property="name" column="name" />
            <result property="address" column="address" />
            <result property="level" column="level" />
            <result property="hKey" column="h_key" />
            <result property="pycode" column="pyCode" />
            <result property="type" column="type" />
            <result property="typeName" column="type_name" />
            <result property="status" column="status" />
            <result property="phone" column="phone" />
            <result property="delFalg" column="del_falg" />
            <result property="creator" column="creator" />
            <result property="createDate" column="create_date" />
            <result property="updator" column="updator" />
            <result property="updateDate" column="update_date" />

    
      <association property="creatorUser" column="creator" select="com.jc.cz_index.dao.ISystemUserDao.getBaseObject">
      </association>
      <association property="updatorUser" column="updator" select="com.jc.cz_index.dao.ISystemUserDao.getBaseObject">
      </association>
     
    </resultMap>
    
    <sql id="baseCol">
        id,name,address,level,h_key,pyCode,type,type_name,status,phone,del_falg,creator,create_date,updator,update_date

    </sql>

    <sql id="pageSql">
        <if test="__start !=null and __size!=null"><![CDATA[ limit #{__start},#{__size} ]]></if>
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="id != null"><![CDATA[ and id = #{id} ]]></if>
            <if test="id_r_min != null"><![CDATA[ and id >= #{id_r_min} and id <= #{id_r_max} ]]></if>
            <if test="id_enum != null">
                <![CDATA[ and id in ]]>
                <foreach collection="id_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="name != null"><![CDATA[ and  name = #{name:VARCHAR}]]></if>
            <if test="name_r_min != null"><![CDATA[ and name >= #{name_r_min} and name <= #{name_r_max} ]]></if>
            <if test="name_enum != null">
                <![CDATA[ and name in ]]>
                <foreach collection="name_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="address != null"><![CDATA[ and  address = #{address:VARCHAR}]]></if>
            <if test="address_r_min != null"><![CDATA[ and address >= #{address_r_min} and address <= #{address_r_max} ]]></if>
            <if test="address_enum != null">
                <![CDATA[ and address in ]]>
                <foreach collection="address_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="level != null"><![CDATA[ and  level = #{level:VARCHAR}]]></if>
            <if test="level_r_min != null"><![CDATA[ and level >= #{level_r_min} and level <= #{level_r_max} ]]></if>
            <if test="level_enum != null">
                <![CDATA[ and level in ]]>
                <foreach collection="level_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="hKey != null"><![CDATA[ and  h_key = #{hKey:VARCHAR}]]></if>
            <if test="hKey_r_min != null"><![CDATA[ and h_key >= #{hKey_r_min} and h_key <= #{hKey_r_max} ]]></if>
            <if test="hKey_enum != null">
                <![CDATA[ and h_key in ]]>
                <foreach collection="hKey_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="pycode != null"><![CDATA[ and  pyCode = #{pycode:VARCHAR}]]></if>
            <if test="pycode_r_min != null"><![CDATA[ and pyCode >= #{pycode_r_min} and pyCode <= #{pycode_r_max} ]]></if>
            <if test="pycode_enum != null">
                <![CDATA[ and pyCode in ]]>
                <foreach collection="pycode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="type != null"><![CDATA[ and  type = #{type:VARCHAR}]]></if>
            <if test="type_r_min != null"><![CDATA[ and type >= #{type_r_min} and type <= #{type_r_max} ]]></if>
            <if test="type_enum != null">
                <![CDATA[ and type in ]]>
                <foreach collection="type_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="typeName != null"><![CDATA[ and  type_name = #{typeName:VARCHAR}]]></if>
            <if test="typeName_r_min != null"><![CDATA[ and type_name >= #{typeName_r_min} and type_name <= #{typeName_r_max} ]]></if>
            <if test="typeName_enum != null">
                <![CDATA[ and type_name in ]]>
                <foreach collection="typeName_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="status != null"><![CDATA[ and  status = #{status:NUMERIC}]]></if>
            <if test="status_r_min != null"><![CDATA[ and status >= #{status_r_min} and status <= #{status_r_max} ]]></if>
            <if test="status_enum != null">
                <![CDATA[ and status in ]]>
                <foreach collection="status_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="phone != null"><![CDATA[ and  phone = #{phone:VARCHAR}]]></if>
            <if test="phone_r_min != null"><![CDATA[ and phone >= #{phone_r_min} and phone <= #{phone_r_max} ]]></if>
            <if test="phone_enum != null">
                <![CDATA[ and phone in ]]>
                <foreach collection="phone_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="delFalg != null"><![CDATA[ and  del_falg = #{delFalg:NUMERIC}]]></if>
            <if test="delFalg_r_min != null"><![CDATA[ and del_falg >= #{delFalg_r_min} and del_falg <= #{delFalg_r_max} ]]></if>
            <if test="delFalg_enum != null">
                <![CDATA[ and del_falg in ]]>
                <foreach collection="delFalg_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="creator != null"><![CDATA[ and  creator = #{creator:NUMERIC}]]></if>
            <if test="creator_r_min != null"><![CDATA[ and creator >= #{creator_r_min} and creator <= #{creator_r_max} ]]></if>
            <if test="creator_enum != null">
                <![CDATA[ and creator in ]]>
                <foreach collection="creator_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="createDate != null"><![CDATA[ and  create_date = #{createDate:DATETIME}]]></if>
            <if test="createDate_r_min != null"><![CDATA[ and create_date >= #{createDate_r_min} and create_date <= #{createDate_r_max} ]]></if>
            <if test="createDate_enum != null">
                <![CDATA[ and create_date in ]]>
                <foreach collection="createDate_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="updator != null"><![CDATA[ and  updator = #{updator:NUMERIC}]]></if>
            <if test="updator_r_min != null"><![CDATA[ and updator >= #{updator_r_min} and updator <= #{updator_r_max} ]]></if>
            <if test="updator_enum != null">
                <![CDATA[ and updator in ]]>
                <foreach collection="updator_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
             <if test="maxUpateDate_r_leq !=' 23:59:59' and maxUpateDate_r_leq!= null"><![CDATA[ and update_date <= #{maxUpateDate_r_leq} ]]></if>
            <if test="minUpateDate_r_geq !=' 00:00:00' and  minUpateDate_r_geq!= null "><![CDATA[ and update_date >= #{minUpateDate_r_geq} ]]></if>
            <if test="updateDate != null"><![CDATA[ and  update_date = #{updateDate:DATETIME}]]></if>
            <if test="updateDate_r_min != null"><![CDATA[ and update_date >= #{updateDate_r_min} and update_date <= #{updateDate_r_max} ]]></if>
            <if test="updateDate_enum != null">
                <![CDATA[ and update_date in ]]>
                <foreach collection="updateDate_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>

        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'id_desc'"><![CDATA[ id desc, ]]></if>
            <if test="_orderBy == 'id_asc'"><![CDATA[ id, ]]></if>
            <if test="_orderBy == 'name_desc'" ><![CDATA[ name desc, ]]></if>
            <if test="_orderBy == 'name_asc'" ><![CDATA[ name, ]]></if>
            <if test="_orderBy == 'address_desc'" ><![CDATA[ address desc, ]]></if>
            <if test="_orderBy == 'address_asc'" ><![CDATA[ address, ]]></if>
            <if test="_orderBy == 'level_desc'" ><![CDATA[ level desc, ]]></if>
            <if test="_orderBy == 'level_asc'" ><![CDATA[ level, ]]></if>
            <if test="_orderBy == 'hKey_desc'" ><![CDATA[ h_key desc, ]]></if>
            <if test="_orderBy == 'hKey_asc'" ><![CDATA[ h_key, ]]></if>
            <if test="_orderBy == 'pycode_desc'" ><![CDATA[ pyCode desc, ]]></if>
            <if test="_orderBy == 'pycode_asc'" ><![CDATA[ pyCode, ]]></if>
            <if test="_orderBy == 'type_desc'" ><![CDATA[ type desc, ]]></if>
            <if test="_orderBy == 'type_asc'" ><![CDATA[ type, ]]></if>
            <if test="_orderBy == 'typeName_desc'" ><![CDATA[ type_name desc, ]]></if>
            <if test="_orderBy == 'typeName_asc'" ><![CDATA[ type_name, ]]></if>
            <if test="_orderBy == 'status_desc'" ><![CDATA[ status desc, ]]></if>
            <if test="_orderBy == 'status_asc'" ><![CDATA[ status, ]]></if>
            <if test="_orderBy == 'phone_desc'" ><![CDATA[ phone desc, ]]></if>
            <if test="_orderBy == 'phone_asc'" ><![CDATA[ phone, ]]></if>
            <if test="_orderBy == 'delFalg_desc'" ><![CDATA[ del_falg desc, ]]></if>
            <if test="_orderBy == 'delFalg_asc'" ><![CDATA[ del_falg, ]]></if>
            <if test="_orderBy == 'creator_desc'" ><![CDATA[ creator desc, ]]></if>
            <if test="_orderBy == 'creator_asc'" ><![CDATA[ creator, ]]></if>
            <if test="_orderBy == 'createDate_desc'" ><![CDATA[ create_date desc, ]]></if>
            <if test="_orderBy == 'createDate_asc'" ><![CDATA[ create_date, ]]></if>
            <if test="_orderBy == 'updator_desc'" ><![CDATA[ updator desc, ]]></if>
            <if test="_orderBy == 'updator_asc'" ><![CDATA[ updator, ]]></if>
            <if test="_orderBy == 'updateDate_desc'" ><![CDATA[ update_date desc, ]]></if>
            <if test="_orderBy == 'updateDate_asc'" ><![CDATA[ update_date, ]]></if>
            <if test="_orderBy_enum != null">
                <foreach collection="_orderBy_enum" item="orderItem" open="" separator="," close="">
                    <if test="orderItem == 'id_desc'"><![CDATA[ id desc ]]></if>
                    <if test="orderItem == 'id_asc'"><![CDATA[ id ]]></if>
                    <if test="orderItem == 'name_desc'" ><![CDATA[ name desc ]]></if>
                    <if test="orderItem == 'name_asc'" ><![CDATA[ name ]]></if>
                    <if test="orderItem == 'address_desc'" ><![CDATA[ address desc ]]></if>
                    <if test="orderItem == 'address_asc'" ><![CDATA[ address ]]></if>
                    <if test="orderItem == 'level_desc'" ><![CDATA[ level desc ]]></if>
                    <if test="orderItem == 'level_asc'" ><![CDATA[ level ]]></if>
                    <if test="orderItem == 'hKey_desc'" ><![CDATA[ h_key desc ]]></if>
                    <if test="orderItem == 'hKey_asc'" ><![CDATA[ h_key ]]></if>
                    <if test="orderItem == 'pycode_desc'" ><![CDATA[ pyCode desc ]]></if>
                    <if test="orderItem == 'pycode_asc'" ><![CDATA[ pyCode ]]></if>
                    <if test="orderItem == 'type_desc'" ><![CDATA[ type desc ]]></if>
                    <if test="orderItem == 'type_asc'" ><![CDATA[ type ]]></if>
                    <if test="orderItem == 'typeName_desc'" ><![CDATA[ type_name desc ]]></if>
                    <if test="orderItem == 'typeName_asc'" ><![CDATA[ type_name ]]></if>
                    <if test="orderItem == 'status_desc'" ><![CDATA[ status desc ]]></if>
                    <if test="orderItem == 'status_asc'" ><![CDATA[ status ]]></if>
                    <if test="orderItem == 'phone_desc'" ><![CDATA[ phone desc ]]></if>
                    <if test="orderItem == 'phone_asc'" ><![CDATA[ phone ]]></if>
                    <if test="orderItem == 'delFalg_desc'" ><![CDATA[ del_falg desc ]]></if>
                    <if test="orderItem == 'delFalg_asc'" ><![CDATA[ del_falg ]]></if>
                    <if test="orderItem == 'creator_desc'" ><![CDATA[ creator desc ]]></if>
                    <if test="orderItem == 'creator_asc'" ><![CDATA[ creator ]]></if>
                    <if test="orderItem == 'createDate_desc'" ><![CDATA[ create_date desc ]]></if>
                    <if test="orderItem == 'createDate_asc'" ><![CDATA[ create_date ]]></if>
                    <if test="orderItem == 'updator_desc'" ><![CDATA[ updator desc ]]></if>
                    <if test="orderItem == 'updator_asc'" ><![CDATA[ updator ]]></if>
                    <if test="orderItem == 'updateDate_desc'" ><![CDATA[ update_date desc ]]></if>
                    <if test="orderItem == 'updateDate_asc'" ><![CDATA[ update_date ]]></if>
                </foreach>
            </if>

        </trim>
    </sql>

    <sql id="updateSetSql">
        <trim prefix="set" prefixOverrides=",">
            <if test="name != null" ><![CDATA[ and  name = #{name}]]></if>
            <if test="address != null" ><![CDATA[ and  address = #{address}]]></if>
            <if test="level != null" ><![CDATA[ and  level = #{level}]]></if>
            <if test="hKey != null" ><![CDATA[ and  h_key = #{hKey}]]></if>
            <if test="pycode != null" ><![CDATA[ and  pyCode = #{pycode}]]></if>
            <if test="type != null" ><![CDATA[ and  type = #{type}]]></if>
            <if test="typeName != null" ><![CDATA[ and  type_name = #{typeName}]]></if>
            <if test="status != null" ><![CDATA[ and  status = #{status}]]></if>
            <if test="phone != null" ><![CDATA[ and  phone = #{phone}]]></if>
            <if test="delFalg != null" ><![CDATA[ and  del_falg = #{delFalg}]]></if>
            <if test="creator != null" ><![CDATA[ and  creator = #{creator}]]></if>
            <if test="createDate != null" ><![CDATA[ and  create_date = #{createDate}]]></if>
            <if test="updator != null" ><![CDATA[ and  updator = #{updator}]]></if>
            <if test="updateDate != null" ><![CDATA[ and  update_date = #{updateDate}]]></if>

        </trim>
    </sql>  

    <insert id="insertObject" parameterType="com.jc.cz_index.model.Hospital">
        <selectKey resultType="Long" keyProperty="id" order="AFTER">
         SELECT LAST_INSERT_ID()
        </selectKey>
        insert into HOSPITAL( id,name,address,level,h_key,pyCode,type,type_name,status,phone,del_falg,creator,create_date,updator,update_date ) values (#{id},#{name},#{address},#{level},#{hKey},#{pycode},#{type},#{typeName},#{status},#{phone},#{delFalg},#{creator},#{createDate},#{updator},#{updateDate} )
    </insert>

    <update id="updateObject" parameterType="com.jc.cz_index.model.Hospital">
        update HOSPITAL set name=#{name},address=#{address},level=#{level},h_key=#{hKey},pyCode=#{pycode},type=#{type},type_name=#{typeName},status=#{status},phone=#{phone},del_falg=#{delFalg},creator=#{creator},create_date=#{createDate},updator=#{updator},update_date=#{updateDate} where id=#{id}
    </update>
    
    <update id="updateObjectByFields" parameterType="com.jc.cz_index.dao.QueryParams">
        UPDATE HOSPITAL 
        <include refid="updateSetSql" />
        where id=#{id};
    </update> 
    
    <delete id="deleteObject" parameterType="long">
        DELETE FROM HOSPITAL WHERE id = #{id}
    </delete>

    <delete id="deleteObjectByWhere" parameterType="com.jc.cz_index.dao.QueryParams">
        DELETE FROM HOSPITAL
        <include refid="whereSql" />
    </delete>

    <select id="getBaseObject" parameterType="long" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from HOSPITAL where id=#{id};
    </select>

    <select id="getDetailObject" parameterType="long" resultMap="resultDetailMap">
        select * from HOSPITAL where id=#{id};
    </select>
    
    <select id="queryCount" parameterType="com.jc.cz_index.dao.QueryParams" resultType="int">
        select count(*) from HOSPITAL
          <include refid="whereSql" />
    </select>
    
    <select id="queryBaseList" parameterType="com.jc.cz_index.dao.QueryParams" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from HOSPITAL
            <include refid="whereSql" />
          <include refid="orderSql" />
        <include refid="pageSql" />
    </select>

    <select id="queryDetailList" parameterType="com.jc.cz_index.dao.QueryParams" resultMap="resultDetailMap">
        select * from HOSPITAL
            <include refid="whereSql" />
          <include refid="orderSql" />
        <include refid="pageSql" />
    </select>
    
    <insert id="insertList" parameterType="java.util.List">
        insert into
        HOSPITAL (name,address,level,h_key,pyCode,type,type_name,status,phone,del_falg,creator,create_date,updator,update_date)
        values 
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.name},#{item.address},#{item.level},#{item.hKey},#{item.pycode},#{item.type},#{item.typeName},#{item.status},#{item.phone},#{item.delFalg},#{item.creator},#{item.createDate},#{item.updator},#{item.updateDate})
        </foreach>
    </insert>
    
    <delete id="deleteList" parameterType="java.util.List">
        delete from HOSPITAL WHERE id in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    
    <delete id="deleteListByPKs" parameterType="String">
        delete from HOSPITAL WHERE FIND_IN_SET(id,#{PKs})
    </delete>
    
    <select id="getObjectList" parameterType="java.util.List" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from HOSPITAL WHERE id in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    
    <select id="getObjectListByPKs" parameterType="String" resultMap="resultMap">
        select 
        <include refid="baseCol" />
        from HOSPITAL WHERE FIND_IN_SET(id,#{PKs})
    </select>
</mapper>
