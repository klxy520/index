<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jc.cz_index.dao.IResidentBaseinfoDao">
	
	<resultMap id="resultMap" type="com.jc.cz_index.model.ResidentBaseinfo">
            <result property="id" column="id" />
            <result property="realName" column="real_name" />
            <result property="healthNumber" column="health_number" />
            <result property="socialNumber" column="social_number" />
            <result property="idNumber" column="id_number" />
            <result property="periodValidityDate" column="period_validity_date" />
            <result property="sex" column="sex" />
            <result property="age" column="age" />
            <result property="nation" column="nation" />
            <result property="houseAddress" column="house_address" />
            <result property="nowAddress" column="now_address" />
            <result property="postCode" column="post_code" />
            <result property="phone" column="phone" />
            <result property="wrokUnit" column="wrok_unit" />
            <result property="education" column="education" />
            <result property="officeId" column="office_id" />
            <result property="areaId" column="area_id" />
            <result property="delFalg" column="del_falg" />
            <result property="creator" column="creator" />
            <result property="createDate" column="create_date" />
            <result property="updator" column="updator" />
            <result property="updateDate" column="update_date" />
            <result property="deleteor" column="deleteor" />
            <result property="deleteDate" column="delete_date" />

	</resultMap>
	
	<resultMap id="resultDetailMap" type="com.jc.cz_index.model.ResidentBaseinfo">
            <result property="id" column="id" />
            <result property="realName" column="real_name" />
            <result property="healthNumber" column="health_number" />
            <result property="socialNumber" column="social_number" />
            <result property="idNumber" column="id_number" />
            <result property="periodValidityDate" column="period_validity_date" />
            <result property="sex" column="sex" />
            <result property="age" column="age" />
            <result property="nation" column="nation" />
            <result property="houseAddress" column="house_address" />
            <result property="nowAddress" column="now_address" />
            <result property="postCode" column="post_code" />
            <result property="phone" column="phone" />
            <result property="wrokUnit" column="wrok_unit" />
            <result property="education" column="education" />
            <result property="officeId" column="office_id" />
            <result property="areaId" column="area_id" />
            <result property="delFalg" column="del_falg" />
            <result property="creator" column="creator" />
            <result property="createDate" column="create_date" />
            <result property="updator" column="updator" />
            <result property="updateDate" column="update_date" />
            <result property="deleteor" column="deleteor" />
            <result property="deleteDate" column="delete_date" />

	<!-- 
	  <association property="creatorUser" column="creator" select="com.jc.cz_index.dao.IUserDao.getBaseObject">
	  </association>
	  <association property="updatorUser" column="updator" select="com.jc.cz_index.dao.IUserDao.getBaseObject">
	  </association>
	 -->
	</resultMap>
	
	<resultMap id="resultDtoMap" type="com.jc.cz_index.dto.resident.ResidentBaseinfoDto">
            <result property="id" column="id" />
            <result property="realName" column="real_name" />
            <result property="healthNumber" column="health_number" />
            <result property="socialNumber" column="social_number" />
            <result property="idNumber" column="id_number" />
            <result property="periodValidityDate" column="period_validity_date" />
            <result property="sex" column="sex" />
            <result property="age" column="age" />
            <result property="nation" column="nation" />
            <result property="houseAddress" column="house_address" />
            <result property="nowAddress" column="now_address" />
            <result property="postCode" column="post_code" />
            <result property="phone" column="phone" />
            <result property="wrokUnit" column="wrok_unit" />
            <result property="education" column="education" />
            <result property="office" column="office" />
            <result property="area" column="area" />
            <result property="creator" column="person" />
            <result property="createDate" column="create_date" />
            <result property="updateDate" column="update_date" />
	</resultMap>
	
	<sql id="baseCol">
        id,real_name,health_number,social_number,id_number,period_validity_date,sex,age,nation,house_address,now_address,post_code,phone,wrok_unit,education,office_id,area_id,del_falg,creator,create_date,updator,update_date,deleteor,delete_date

	</sql>

	<sql id="pageSql">
		<if test="__start !=null and __size!=null"><![CDATA[ limit #{__start},#{__size} ]]></if>
	</sql>

	<sql id="whereSql">
		<trim prefix="WHERE" prefixOverrides="and |or ">
			<if test="area!= 0 and office !=0 and area != null and office != null">
			and rb.id IN ( SELECT ull.resident_id FROM update_resident_log ull WHERE ull.user_id IN (
		SELECT su.id FROM system_user su WHERE su.area_id IN ( SELECT ad.id FROM administrative_division ad 
		where ad.id = #{area} OR ad.parentid = #{area}) OR su.organization_id = #{office}))
			</if>
            <if test="id != null"><![CDATA[ and id = #{id} ]]></if>
            <if test="id_r_min != null"><![CDATA[ and id >= #{id_r_min} and id <= #{id_r_max} ]]></if>
            <if test="id_enum != null">
                <![CDATA[ and id in ]]>
                <foreach collection="id_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="realName != null"><![CDATA[ and  real_name = #{realName:VARCHAR}]]></if>
            <if test="realName_like != null"><![CDATA[ and real_name like #{realName_like} ]]></if>
            <if test="realName_r_min != null"><![CDATA[ and real_name >= #{realName_r_min} and real_name <= #{realName_r_max} ]]></if>
            <if test="realName_enum != null">
                <![CDATA[ and real_name in ]]>
                <foreach collection="realName_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="healthNumber != null"><![CDATA[ and  health_number = #{healthNumber:VARCHAR}]]></if>
             <if test="healthNumber_like != null"><![CDATA[ and health_number like #{healthNumber_like} ]]></if>
            <if test="healthNumber_r_min != null"><![CDATA[ and health_number >= #{healthNumber_r_min} and health_number <= #{healthNumber_r_max} ]]></if>
            <if test="healthNumber_enum != null">
                <![CDATA[ and health_number in ]]>
                <foreach collection="healthNumber_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="socialNumber != null"><![CDATA[ and  social_number = #{socialNumber:VARCHAR}]]></if>
             <if test="socialNumber_like != null"><![CDATA[ and social_number like #{socialNumber_like} ]]></if>
            <if test="socialNumber_r_min != null"><![CDATA[ and social_number >= #{socialNumber_r_min} and social_number <= #{socialNumber_r_max} ]]></if>
            <if test="socialNumber_enum != null">
                <![CDATA[ and social_number in ]]>
                <foreach collection="socialNumber_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="idNumber != null"><![CDATA[ and  id_number = #{idNumber:VARCHAR}]]></if>
            <if test="idNumber_like != null"><![CDATA[ and id_number like #{idNumber_like} ]]></if>
            <if test="idNumber_r_min != null"><![CDATA[ and id_number >= #{idNumber_r_min} and id_number <= #{idNumber_r_max} ]]></if>
            <if test="idNumber_enum != null">
                <![CDATA[ and id_number in ]]>
                <foreach collection="idNumber_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="maxDate_r_leq != null"><![CDATA[ and period_validity_date <= #{maxDate_r_leq} ]]></if>
            <if test="minDate_r_geq != null"><![CDATA[ and period_validity_date >= #{minDate_r_geq} ]]></if>
            <if test="periodValidityDate != null"><![CDATA[ and  period_validity_date = #{periodValidityDate:DATETIME}]]></if>
            <if test="periodValidityDate_r_min != null"><![CDATA[ and period_validity_date >= #{periodValidityDate_r_min} and period_validity_date <= #{periodValidityDate_r_max} ]]></if>
            <if test="periodValidityDate_enum != null">
                <![CDATA[ and period_validity_date in ]]>
                <foreach collection="periodValidityDate_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="sex != null"><![CDATA[ and  sex = #{sex:VARCHAR}]]></if>
            <if test="sex_r_min != null"><![CDATA[ and sex >= #{sex_r_min} and sex <= #{sex_r_max} ]]></if>
            <if test="sex_enum != null">
                <![CDATA[ and sex in ]]>
                <foreach collection="sex_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="age != null"><![CDATA[ and  age = #{age:NUMERIC}]]></if>
            <if test="age_r_min != null"><![CDATA[ and age >= #{age_r_min} and age <= #{age_r_max} ]]></if>
            <if test="age_enum != null">
                <![CDATA[ and age in ]]>
                <foreach collection="age_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="nation != null"><![CDATA[ and  nation = #{nation:VARCHAR}]]></if>
            <if test="nation_like != null"><![CDATA[ and  nation like #{nation_like}]]></if>
            <if test="nation_r_min != null"><![CDATA[ and nation >= #{nation_r_min} and nation <= #{nation_r_max} ]]></if>
            <if test="nation_enum != null">
                <![CDATA[ and nation in ]]>
                <foreach collection="nation_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="houseAddress != null"><![CDATA[ and  house_address = #{houseAddress:VARCHAR}]]></if>
            <if test="houseAddress_r_min != null"><![CDATA[ and house_address >= #{houseAddress_r_min} and house_address <= #{houseAddress_r_max} ]]></if>
            <if test="houseAddress_enum != null">
                <![CDATA[ and house_address in ]]>
                <foreach collection="houseAddress_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="nowAddress != null"><![CDATA[ and  now_address = #{nowAddress:VARCHAR}]]></if>
            <if test="nowAddress_r_min != null"><![CDATA[ and now_address >= #{nowAddress_r_min} and now_address <= #{nowAddress_r_max} ]]></if>
            <if test="nowAddress_enum != null">
                <![CDATA[ and now_address in ]]>
                <foreach collection="nowAddress_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="postCode != null"><![CDATA[ and  post_code = #{postCode:VARCHAR}]]></if>
            <if test="postCode_r_min != null"><![CDATA[ and post_code >= #{postCode_r_min} and post_code <= #{postCode_r_max} ]]></if>
            <if test="postCode_enum != null">
                <![CDATA[ and post_code in ]]>
                <foreach collection="postCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="phone != null"><![CDATA[ and  phone = #{phone:VARCHAR}]]></if>
            <if test="phone_r_min != null"><![CDATA[ and phone >= #{phone_r_min} and phone <= #{phone_r_max} ]]></if>
            <if test="phone_enum != null">
                <![CDATA[ and phone in ]]>
                <foreach collection="phone_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="wrokUnit != null"><![CDATA[ and  wrok_unit = #{wrokUnit:VARCHAR}]]></if>
            <if test="wrokUnit_r_min != null"><![CDATA[ and wrok_unit >= #{wrokUnit_r_min} and wrok_unit <= #{wrokUnit_r_max} ]]></if>
            <if test="wrokUnit_enum != null">
                <![CDATA[ and wrok_unit in ]]>
                <foreach collection="wrokUnit_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="education != null"><![CDATA[ and  education = #{education:VARCHAR}]]></if>
            <if test="education_r_min != null"><![CDATA[ and education >= #{education_r_min} and education <= #{education_r_max} ]]></if>
            <if test="education_enum != null">
                <![CDATA[ and education in ]]>
                <foreach collection="education_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="officeId != null"><![CDATA[ and  office_id = #{officeId:NUMERIC}]]></if>
            <if test="officeId_r_min != null"><![CDATA[ and office_id >= #{officeId_r_min} and office_id <= #{officeId_r_max} ]]></if>
            <if test="officeId_enum != null">
                <![CDATA[ and office_id in ]]>
                <foreach collection="officeId_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="areaId != null"><![CDATA[ and  area_id = #{areaId:NUMERIC}]]></if>
            <if test="areaId_r_min != null"><![CDATA[ and area_id >= #{areaId_r_min} and area_id <= #{areaId_r_max} ]]></if>
            <if test="areaId_enum != null">
                <![CDATA[ and area_id in ]]>
                <foreach collection="areaId_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="delFalg != null"><![CDATA[ and  del_falg = #{delFalg:NUMERIC}]]></if>
            <if test="delFalg_r_min != null"><![CDATA[ and del_falg >= #{delFalg_r_min} and del_falg <= #{delFalg_r_max} ]]></if>
            <if test="delFalg_enum != null">
                <![CDATA[ and del_falg in ]]>
                <foreach collection="delFalg_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="creator != null"><![CDATA[ and  creator = #{creator:NUMERIC}]]></if>
            <if test="creator_r_min != null"><![CDATA[ and creator >= #{creator_r_min} and creator <= #{creator_r_max} ]]></if>
            <if test="creator_enum != null">
                <![CDATA[ and creator in ]]>
                <foreach collection="creator_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="createDate != null"><![CDATA[ and  create_date = #{createDate:DATETIME}]]></if>
            <if test="createDate_r_min != null"><![CDATA[ and create_date >= #{createDate_r_min} and create_date <= #{createDate_r_max} ]]></if>
            <if test="createDate_enum != null">
                <![CDATA[ and create_date in ]]>
                <foreach collection="createDate_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="updator != null"><![CDATA[ and  updator = #{updator:NUMERIC}]]></if>
            <if test="updator_r_min != null"><![CDATA[ and updator >= #{updator_r_min} and updator <= #{updator_r_max} ]]></if>
            <if test="updator_enum != null">
                <![CDATA[ and updator in ]]>
                <foreach collection="updator_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="updateDate != null"><![CDATA[ and  update_date = #{updateDate:DATETIME}]]></if>
            <if test="updateDate_r_min != null"><![CDATA[ and update_date >= #{updateDate_r_min} and update_date <= #{updateDate_r_max} ]]></if>
            <if test="updateDate_enum != null">
                <![CDATA[ and update_date in ]]>
                <foreach collection="updateDate_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="deleteor != null"><![CDATA[ and  deleteor = #{deleteor:NUMERIC}]]></if>
            <if test="deleteor_r_min != null"><![CDATA[ and deleteor >= #{deleteor_r_min} and deleteor <= #{deleteor_r_max} ]]></if>
            <if test="deleteor_enum != null">
                <![CDATA[ and deleteor in ]]>
                <foreach collection="deleteor_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="deleteDate != null"><![CDATA[ and  delete_date = #{deleteDate:DATETIME}]]></if>
            <if test="deleteDate_r_min != null"><![CDATA[ and delete_date >= #{deleteDate_r_min} and delete_date <= #{deleteDate_r_max} ]]></if>
            <if test="deleteDate_enum != null">
                <![CDATA[ and delete_date in ]]>
                <foreach collection="deleteDate_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
		</trim>
	</sql>

	<sql id="orderSql">
		<trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'id_desc'"><![CDATA[ id desc, ]]></if>
            <if test="_orderBy == 'id_asc'"><![CDATA[ id, ]]></if>
            <if test="_orderBy == 'realName_desc'" ><![CDATA[ real_name desc, ]]></if>
            <if test="_orderBy == 'realName_asc'" ><![CDATA[ real_name, ]]></if>
            <if test="_orderBy == 'healthNumber_desc'" ><![CDATA[ health_number desc, ]]></if>
            <if test="_orderBy == 'healthNumber_asc'" ><![CDATA[ health_number, ]]></if>
            <if test="_orderBy == 'socialNumber_desc'" ><![CDATA[ social_number desc, ]]></if>
            <if test="_orderBy == 'socialNumber_asc'" ><![CDATA[ social_number, ]]></if>
            <if test="_orderBy == 'idNumber_desc'" ><![CDATA[ id_number desc, ]]></if>
            <if test="_orderBy == 'idNumber_asc'" ><![CDATA[ id_number, ]]></if>
            <if test="_orderBy == 'periodValidityDate_desc'" ><![CDATA[ period_validity_date desc, ]]></if>
            <if test="_orderBy == 'periodValidityDate_asc'" ><![CDATA[ period_validity_date, ]]></if>
            <if test="_orderBy == 'sex_desc'" ><![CDATA[ sex desc, ]]></if>
            <if test="_orderBy == 'sex_asc'" ><![CDATA[ sex, ]]></if>
            <if test="_orderBy == 'age_desc'" ><![CDATA[ age desc, ]]></if>
            <if test="_orderBy == 'age_asc'" ><![CDATA[ age, ]]></if>
            <if test="_orderBy == 'nation_desc'" ><![CDATA[ nation desc, ]]></if>
            <if test="_orderBy == 'nation_asc'" ><![CDATA[ nation, ]]></if>
            <if test="_orderBy == 'houseAddress_desc'" ><![CDATA[ house_address desc, ]]></if>
            <if test="_orderBy == 'houseAddress_asc'" ><![CDATA[ house_address, ]]></if>
            <if test="_orderBy == 'nowAddress_desc'" ><![CDATA[ now_address desc, ]]></if>
            <if test="_orderBy == 'nowAddress_asc'" ><![CDATA[ now_address, ]]></if>
            <if test="_orderBy == 'postCode_desc'" ><![CDATA[ post_code desc, ]]></if>
            <if test="_orderBy == 'postCode_asc'" ><![CDATA[ post_code, ]]></if>
            <if test="_orderBy == 'phone_desc'" ><![CDATA[ phone desc, ]]></if>
            <if test="_orderBy == 'phone_asc'" ><![CDATA[ phone, ]]></if>
            <if test="_orderBy == 'wrokUnit_desc'" ><![CDATA[ wrok_unit desc, ]]></if>
            <if test="_orderBy == 'wrokUnit_asc'" ><![CDATA[ wrok_unit, ]]></if>
            <if test="_orderBy == 'education_desc'" ><![CDATA[ education desc, ]]></if>
            <if test="_orderBy == 'education_asc'" ><![CDATA[ education, ]]></if>
            <if test="_orderBy == 'officeId_desc'" ><![CDATA[ office_id desc, ]]></if>
            <if test="_orderBy == 'officeId_asc'" ><![CDATA[ office_id, ]]></if>
            <if test="_orderBy == 'areaId_desc'" ><![CDATA[ area_id desc, ]]></if>
            <if test="_orderBy == 'areaId_asc'" ><![CDATA[ area_id, ]]></if>
            <if test="_orderBy == 'delFalg_desc'" ><![CDATA[ del_falg desc, ]]></if>
            <if test="_orderBy == 'delFalg_asc'" ><![CDATA[ del_falg, ]]></if>
            <if test="_orderBy == 'creator_desc'" ><![CDATA[ creator desc, ]]></if>
            <if test="_orderBy == 'creator_asc'" ><![CDATA[ creator, ]]></if>
            <if test="_orderBy == 'createDate_desc'" ><![CDATA[ create_date desc, ]]></if>
            <if test="_orderBy == 'createDate_asc'" ><![CDATA[ create_date, ]]></if>
            <if test="_orderBy == 'updator_desc'" ><![CDATA[ updator desc, ]]></if>
            <if test="_orderBy == 'updator_asc'" ><![CDATA[ updator, ]]></if>
            <if test="_orderBy == 'updateDate_desc'" ><![CDATA[ update_date desc, ]]></if>
            <if test="_orderBy == 'updateDate_asc'" ><![CDATA[ update_date, ]]></if>
            <if test="_orderBy == 'deleteor_desc'" ><![CDATA[ deleteor desc, ]]></if>
            <if test="_orderBy == 'deleteor_asc'" ><![CDATA[ deleteor, ]]></if>
            <if test="_orderBy == 'deleteDate_desc'" ><![CDATA[ delete_date desc, ]]></if>
            <if test="_orderBy == 'deleteDate_asc'" ><![CDATA[ delete_date, ]]></if>
            <if test="_orderBy_enum != null">
                <foreach collection="_orderBy_enum" item="orderItem" open="" separator="," close="">
                    <if test="orderItem == 'id_desc'"><![CDATA[ id desc ]]></if>
                    <if test="orderItem == 'id_asc'"><![CDATA[ id ]]></if>
                    <if test="orderItem == 'realName_desc'" ><![CDATA[ real_name desc ]]></if>
                    <if test="orderItem == 'realName_asc'" ><![CDATA[ real_name ]]></if>
                    <if test="orderItem == 'healthNumber_desc'" ><![CDATA[ health_number desc ]]></if>
                    <if test="orderItem == 'healthNumber_asc'" ><![CDATA[ health_number ]]></if>
                    <if test="orderItem == 'socialNumber_desc'" ><![CDATA[ social_number desc ]]></if>
                    <if test="orderItem == 'socialNumber_asc'" ><![CDATA[ social_number ]]></if>
                    <if test="orderItem == 'idNumber_desc'" ><![CDATA[ id_number desc ]]></if>
                    <if test="orderItem == 'idNumber_asc'" ><![CDATA[ id_number ]]></if>
                    <if test="orderItem == 'periodValidityDate_desc'" ><![CDATA[ period_validity_date desc ]]></if>
                    <if test="orderItem == 'periodValidityDate_asc'" ><![CDATA[ period_validity_date ]]></if>
                    <if test="orderItem == 'sex_desc'" ><![CDATA[ sex desc ]]></if>
                    <if test="orderItem == 'sex_asc'" ><![CDATA[ sex ]]></if>
                    <if test="orderItem == 'age_desc'" ><![CDATA[ age desc ]]></if>
                    <if test="orderItem == 'age_asc'" ><![CDATA[ age ]]></if>
                    <if test="orderItem == 'nation_desc'" ><![CDATA[ nation desc ]]></if>
                    <if test="orderItem == 'nation_asc'" ><![CDATA[ nation ]]></if>
                    <if test="orderItem == 'houseAddress_desc'" ><![CDATA[ house_address desc ]]></if>
                    <if test="orderItem == 'houseAddress_asc'" ><![CDATA[ house_address ]]></if>
                    <if test="orderItem == 'nowAddress_desc'" ><![CDATA[ now_address desc ]]></if>
                    <if test="orderItem == 'nowAddress_asc'" ><![CDATA[ now_address ]]></if>
                    <if test="orderItem == 'postCode_desc'" ><![CDATA[ post_code desc ]]></if>
                    <if test="orderItem == 'postCode_asc'" ><![CDATA[ post_code ]]></if>
                    <if test="orderItem == 'phone_desc'" ><![CDATA[ phone desc ]]></if>
                    <if test="orderItem == 'phone_asc'" ><![CDATA[ phone ]]></if>
                    <if test="orderItem == 'wrokUnit_desc'" ><![CDATA[ wrok_unit desc ]]></if>
                    <if test="orderItem == 'wrokUnit_asc'" ><![CDATA[ wrok_unit ]]></if>
                    <if test="orderItem == 'education_desc'" ><![CDATA[ education desc ]]></if>
                    <if test="orderItem == 'education_asc'" ><![CDATA[ education ]]></if>
                    <if test="orderItem == 'officeId_desc'" ><![CDATA[ office_id desc ]]></if>
                    <if test="orderItem == 'officeId_asc'" ><![CDATA[ office_id ]]></if>
                    <if test="orderItem == 'areaId_desc'" ><![CDATA[ area_id desc ]]></if>
                    <if test="orderItem == 'areaId_asc'" ><![CDATA[ area_id ]]></if>
                    <if test="orderItem == 'delFalg_desc'" ><![CDATA[ del_falg desc ]]></if>
                    <if test="orderItem == 'delFalg_asc'" ><![CDATA[ del_falg ]]></if>
                    <if test="orderItem == 'creator_desc'" ><![CDATA[ creator desc ]]></if>
                    <if test="orderItem == 'creator_asc'" ><![CDATA[ creator ]]></if>
                    <if test="orderItem == 'createDate_desc'" ><![CDATA[ create_date desc ]]></if>
                    <if test="orderItem == 'createDate_asc'" ><![CDATA[ create_date ]]></if>
                    <if test="orderItem == 'updator_desc'" ><![CDATA[ updator desc ]]></if>
                    <if test="orderItem == 'updator_asc'" ><![CDATA[ updator ]]></if>
                    <if test="orderItem == 'updateDate_desc'" ><![CDATA[ update_date desc ]]></if>
                    <if test="orderItem == 'updateDate_asc'" ><![CDATA[ update_date ]]></if>
                    <if test="orderItem == 'deleteor_desc'" ><![CDATA[ deleteor desc ]]></if>
                    <if test="orderItem == 'deleteor_asc'" ><![CDATA[ deleteor ]]></if>
                    <if test="orderItem == 'deleteDate_desc'" ><![CDATA[ delete_date desc ]]></if>
                    <if test="orderItem == 'deleteDate_asc'" ><![CDATA[ delete_date ]]></if>
                </foreach>
            </if>

		</trim>
	</sql>

	<sql id="updateSetSql">
		<trim prefix="set" prefixOverrides=",">
            <if test="realName != null" ><![CDATA[ ,  real_name = #{realName}]]></if>
            <if test="healthNumber != null" ><![CDATA[ ,  health_number = #{healthNumber}]]></if>
            <if test="socialNumber != null" ><![CDATA[ ,  social_number = #{socialNumber}]]></if>
            <if test="idNumber != null" ><![CDATA[ ,  id_number = #{idNumber}]]></if>
            <if test="periodValidityDate != null" ><![CDATA[ ,  period_validity_date = #{periodValidityDate}]]></if>
            <if test="sex != null" ><![CDATA[ ,  sex = #{sex}]]></if>
            <if test="age != null" ><![CDATA[ ,  age = #{age}]]></if>
            <if test="nation != null" ><![CDATA[ ,  nation = #{nation}]]></if>
            <if test="houseAddress != null" ><![CDATA[ ,  house_address = #{houseAddress}]]></if>
            <if test="nowAddress != null" ><![CDATA[ ,  now_address = #{nowAddress}]]></if>
            <if test="postCode != null" ><![CDATA[ ,  post_code = #{postCode}]]></if>
            <if test="phone != null" ><![CDATA[ ,  phone = #{phone}]]></if>
            <if test="wrokUnit != null" ><![CDATA[ ,  wrok_unit = #{wrokUnit}]]></if>
            <if test="education != null" ><![CDATA[ ,  education = #{education}]]></if>
            <if test="officeId != null" ><![CDATA[ ,  office_id = #{officeId}]]></if>
            <if test="areaId != null" ><![CDATA[ ,  area_id = #{areaId}]]></if>
            <if test="delFalg != null" ><![CDATA[ ,  del_falg = #{delFalg}]]></if>
            <if test="creator != null" ><![CDATA[ ,  creator = #{creator}]]></if>
            <if test="createDate != null" ><![CDATA[ ,  create_date = #{createDate}]]></if>
            <if test="updator != null" ><![CDATA[ ,  updator = #{updator}]]></if>
            <if test="updateDate != null" ><![CDATA[ ,  update_date = #{updateDate}]]></if>
            <if test="deleteor != null" ><![CDATA[ ,  deleteor = #{deleteor}]]></if>
            <if test="deleteDate != null" ><![CDATA[ ,  delete_date = #{deleteDate}]]></if>

		</trim>
	</sql>	

	<insert id="insertObject" parameterType="com.jc.cz_index.model.ResidentBaseinfo">
		<selectKey resultType="Long" keyProperty="id" order="AFTER">
		 SELECT	LAST_INSERT_ID()
	 	</selectKey>
	 	insert into RESIDENT_BASEINFO( id,real_name,health_number,social_number,id_number,period_validity_date,sex,age,nation,house_address,now_address,post_code,phone,wrok_unit,education,office_id,area_id,del_falg,creator,create_date,updator,update_date,deleteor,delete_date ) values (#{id},#{realName},#{healthNumber},#{socialNumber},#{idNumber},#{periodValidityDate},#{sex},#{age},#{nation},#{houseAddress},#{nowAddress},#{postCode},#{phone},#{wrokUnit},#{education},#{officeId},#{areaId},#{delFalg},#{creator},#{createDate},#{updator},#{updateDate},#{deleteor},#{deleteDate} )
	</insert>

	<update id="updateObject" parameterType="com.jc.cz_index.model.ResidentBaseinfo">
		update RESIDENT_BASEINFO set real_name=#{realName},health_number=#{healthNumber},social_number=#{socialNumber},id_number=#{idNumber},period_validity_date=#{periodValidityDate},sex=#{sex},age=#{age},nation=#{nation},house_address=#{houseAddress},now_address=#{nowAddress},post_code=#{postCode},phone=#{phone},wrok_unit=#{wrokUnit},education=#{education},office_id=#{officeId},area_id=#{areaId},del_falg=#{delFalg},creator=#{creator},create_date=#{createDate},updator=#{updator},update_date=#{updateDate},deleteor=#{deleteor},delete_date=#{deleteDate} where id=#{id}
	</update>
	
	<update id="updateObjectByFields" parameterType="com.jc.cz_index.dao.QueryParams">
		UPDATE RESIDENT_BASEINFO 
		<include refid="updateSetSql" />
		where id=#{id};
  	</update> 
	
	<delete id="deleteObject" parameterType="long">
		DELETE FROM RESIDENT_BASEINFO WHERE id = #{id}
  	</delete>

	<delete id="deleteObjectByWhere" parameterType="com.jc.cz_index.dao.QueryParams">
		DELETE FROM RESIDENT_BASEINFO
		<include refid="whereSql" />
	</delete>

	<select id="getBaseObject" parameterType="long" resultMap="resultMap">
		select 
		<include refid="baseCol" />
		from RESIDENT_BASEINFO where id=#{id};
	</select>

	<select id="getDetailObject" parameterType="long" resultMap="resultDetailMap">
		select * from RESIDENT_BASEINFO where id=#{id};
	</select>
	
	<select id="queryCount" parameterType="com.jc.cz_index.dao.QueryParams" resultType="int">
		select count(*) from RESIDENT_BASEINFO
		  <include refid="whereSql" />
	</select>
	
	<select id="queryBaseList" parameterType="com.jc.cz_index.dao.QueryParams" resultMap="resultMap">
		select 
		<include refid="baseCol" />
		from RESIDENT_BASEINFO rb
			<include refid="whereSql" />
		  <include refid="orderSql" />
		<include refid="pageSql" />
	</select>

	<select id="queryDetailList" parameterType="com.jc.cz_index.dao.QueryParams" resultMap="resultDetailMap">
		select * from RESIDENT_BASEINFO
			<include refid="whereSql" />
		  <include refid="orderSql" />
		<include refid="pageSql" />
	</select>
	<!--根据当前系统用户ID和当前用户所属机构的id加载居民健康卡的基本信息列表 -->
	<select id="selectResidentBaseinfolist" parameterType="com.jc.cz_index.dao.QueryParams" resultMap="resultDtoMap">
	SELECT
		rb.id,
		rb.real_name,
		rb.health_number,
		rb.social_number,
		rb.id_number,
		rb.create_date,
		rb.update_date,
		rb.period_validity_date,
		rb.sex,
		rb.nation,
		rb.education,
		rb.phone,
		concat(ap.`name`,'-',ad.`name`) area,
		am.administrative_name office
	FROM
		resident_baseinfo rb
	LEFT JOIN 
		administrative_division ad ON rb.area_id = ad.id
	LEFT JOIN 
		administrative_management am ON rb.office_id = am.id
	LEFT JOIN 
		administrative_division ap ON ad.parentid=ap.id
	<include refid="whereSql" />
	<include refid="orderSql" />
		<include refid="pageSql" />
	</select>
	<!--根据当前系统用户ID和当前用户所属机构的id统计居民健康卡的基本信息的记录条数 -->
	<select id="countResidentBaseinfolist" parameterType="com.jc.cz_index.dao.QueryParams" resultType="int">
	SELECT count(*) FROM resident_baseinfo rb
	<include refid="whereSql" />
</select>
	<!--通过id查询居民健康卡的基本信息的详情 -->
	<select id="selectResidentBaseinfoDetailsById" parameterType="long" resultMap="resultDtoMap">
	SELECT
		rb.*,
		concat(ap.`name`,'-',ad.`name`) area,
		am.administrative_name office,
		u.`name` person
	FROM
		resident_baseinfo rb
	LEFT JOIN 
		administrative_division ad ON rb.area_id = ad.id
	LEFT JOIN 
		administrative_division ap ON ad.parentid=ap.id
	LEFT JOIN 
		administrative_management am ON rb.office_id = am.id
	LEFT JOIN 
		system_user u ON rb.creator = u.id
	WHERE
		rb.id =#{id}
	</select>
	<!--通过身份证号或者居民健康卡号统计居民信息 -->
	<select id="countOtherResidentBaseinfolist" parameterType="com.jc.cz_index.dao.QueryParams" resultType="int">
		SELECT count(*) FROM resident_baseinfo r WHERE (r.health_number=#{healthNumber} or r.id_number=#{idNumber}) and r.del_falg=0
	</select>
	<!--通过身份证号或者居民健康卡号查询居民信息 -->
	<select id="selectOtherResidentBaseinfolist" parameterType="com.jc.cz_index.dao.QueryParams" resultMap="resultDtoMap">
		SELECT
			rb.id,
			rb.real_name,
			rb.health_number,
			rb.sex,
			rb.social_number,
			rb.id_number,
			rb.period_validity_date,
			ad.`name` area,
			am.administrative_name office
		FROM
			resident_baseinfo rb
			LEFT JOIN administrative_division ad ON rb.area_id=ad.id
			LEFT JOIN administrative_management am on rb.office_id=am.id
		WHERE 
			(rb.id_number=#{idNumber} or rb.health_number=#{healthNumber}) and rb.del_falg=0
		<include refid="orderSql" />
		<include refid="pageSql" />
	</select>
</mapper>

