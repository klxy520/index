<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-4.0.xsd 
    http://www.springframework.org/schema/task  
    http://www.springframework.org/schema/task/spring-task-3.1.xsd  
    http://www.springframework.org/schema/mvc   
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    
     <!--扫描注解 -->
    <context:component-scan base-package="com.jc" />
    
    <task:annotation-driven/>
    
     <!-- Spring MVC配置 -->
    <context:annotation-config />
    
       <!--默认的mvc注解映射的支持 -->
    <mvc:annotation-driven>
     	<mvc:message-converters register-defaults="true">
    		<bean class="org.springframework.http.converter.StringHttpMessageConverter">
      			<property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />
    		</bean>
    		<!-- 返回json日期处理（日期全局处理相差8个小时解决方法） -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <!-- 处理responseBody 里面日期类型 -->
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
                            </bean>
                        </property>
                        <!-- 时区指定 -->
                        <property name="timeZone" value="GMT+8" />
                        <!-- 为null字段时不显示 -->
<!--                         <property name="serializationInclusion"> -->
<!--                             <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value> -->
<!--                         </property> -->
                    </bean>
                </property>
              </bean>
   		</mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 视图解析器和json解析器 -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html"/>
                <entry key="json" value="application/json"/>
                <entry key="text" value="text/plain;charset=UTF-8"/>
                <entry key="text" value="application/x-www-form-urlencoded;charset=UTF-8"/>
            </map>
        </property>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="prefix" value="/WEB-INF/pages/" /> <!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
            </list>
        </property>
    </bean>
    
    <!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL -->
	<!-- 开启默认处理 -->
	<!-- 这样静态资源就可以访问了 -->
	<mvc:default-servlet-handler />
    <!-- 对静态资源文件的访问 -->
    <!-- 前台 -->
    <mvc:resources mapping="/images/**" location="/images/" cache-period="31556926" />
    <mvc:resources mapping="/pics/**" location="/pics/" cache-period="31556926" />
    <mvc:resources mapping="/js/**" location="/js/" cache-period="31556926" />
    <mvc:resources mapping="/css/**" location="/css/" cache-period="31556926" />
    <mvc:resources mapping="/lib/**" location="/lib/" cache-period="31556926" />
    <mvc:resources mapping="/skin/**" location="/skin/" cache-period="31556926" />
	<mvc:resources mapping="/home/**" location="/home/" cache-period="31556926" />
	
    
    <!-- 文件上传解析器 -->
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <!--   限制 文件大小  5M -->
        <property name="maxUploadSize" value="5242880"/>
    </bean>
    
    <!-- 总错误处理 -->
    <bean id="exceptionResolver"
        class="com.jc.cz_index.core.web.exception.MyExceptionResolver">
        <property name="defaultErrorView">
            <value>/500</value>
        </property>
        <property name="defaultStatusCode">
            <value>500</value>
        </property>
        <property name="warnLogCategory">
            <value>com.jc.cz_index.core.web.exception.MyExceptionResolver</value>
        </property>
    </bean>
	<bean id="messageSource"
	       class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
	    <property name="basename" value="classpath:messages"/>
	    <property name="useCodeAsDefaultMessage" value="true"/>
	    <property name="fileEncodings" value="utf-8"/>
	    <property name="cacheSeconds" value="120"/>
	</bean>
	
	
	<mvc:interceptors>    
	    <mvc:interceptor>    
	        <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->  
	        <mvc:mapping path="/**" /> 
	        <bean class="com.jc.cz_index.core.web.interceptor.BaseInterceptor"></bean>    
	    </mvc:interceptor>
	    
	    <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
	</mvc:interceptors>
</beans>